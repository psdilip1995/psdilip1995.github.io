{"version":3,"sources":["components/Navigation/Toolbar/Toolbar.js","components/Navigation/Main/Main.js","hoc/Layout/Layout.js","hoc/UI/Input/Input.js","store/actions/code.js","store/actions/actionTypes.js","components/Code/Data/InputData.js","store/actions/builder.js","components/Builder/Graph/graphTypes.js","components/Code/CodeSnippet/Codes/verticalBarGraphCode.js","components/Code/CodeSnippet/Codes/horizontalBarGraphCode.js","components/Code/CodeSnippet/Codes/histogramCode.js","components/Code/CodeSnippet/Codes/pieChartCode.js","components/Code/CodeSnippet/Codes/scatterPlotCode.js","components/Code/CodeSnippet/Codes/lineChartCode.js","components/Code/CodeSnippet/CodeSnippet.js","components/Code/Code.js","components/Builder/Graph/Plots/verticalBarGraph.js","components/Builder/Graph/Plots/horizontalBarGraph.js","components/Builder/Graph/Plots/histogram.js","components/Builder/Graph/Plots/pieChart.js","components/Builder/Graph/Plots/scatterPlot.js","components/Builder/Graph/Plots/lineGraph.js","components/Builder/Graph/Graph.js","hoc/Select/Select.js","hoc/UI/Button/Button.js","components/Builder/DownloadCodeButton/DownloadCodeButton.js","components/Builder/Controls/Controls.js","components/Builder/Builder.js","App.js","serviceWorker.js","store/reducers/builder.js","store/reducers/code.js","index.js","hoc/Select/Select.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/Main/Main.module.css","hoc/UI/Input/Input.module.css","components/Code/CodeSnippet/CodeSnippet.module.css","components/Code/Code.module.css","components/Builder/Graph/Plots/Plot.module.css","components/Code/CodeSnippet/Codes/Codes.module.css","components/Builder/Graph/Graph.module.css","hoc/UI/Button/Button.module.css","components/Builder/DownloadCodeButton/DownloadCodeButton.module.css","components/Builder/Controls/Controls.module.css","components/Builder/Builder.module.css","components/Code/Data/InputData.module.css"],"names":["connect","state","graphTypes","builder","selectedGraph","dispatch","props","title","filter","obj","type","className","classes","Toolbar","main","Main","children","Layout","this","Component","Input","InputDiv","style","display","show","label","onChange","changed","value","generateCode","codeData","xData","yData","hData","histogramData","sxData","syData","onXDataChange","actions","onYDataChange","onHDataChange","onSxDataChanged","onSyDataChanged","toString","error","test","split","length","firstInputBox","secondInputBox","showFirstBox","showSecondBox","showScatterBox","InputData","UploadBtnDiv","id","event","target","pop","alert","console","log","files","reader","FileReader","onload","result","readAsText","TextboxDiv","yVal","xVal","hVal","sxVal","syVal","codeString2","codeString3","map","d","codeString4","maxVal","v","parseInt","Math","ceil","codeString5","codeString6","codeString7","codeString8","barWidth","round","codeString9","onMount","jsData","useEffect","Codes","yMax","barWidths","eachItemSpace","barHeight","bw","min","max","i","floor","xScale","d3","domain","range","bins","thresholds","ticks","hist","maxY","forEach","xMax","xMin","yMin","xD","addWidth","CodeSnippet","graphType","getCode","code","Code","plotChart","graphDiv","width","height","svg","select","selectAll","remove","xDomain","yDomain","yScale","xAxis","scale","yAxis","data","append","attr","call","enter","on","text","Graph","x0","x1","graph","Plot","datum","x","y","getPlot","Label","Select","changeHandler","options","Button","onClick","click","javaScriptCode","DownloadCodeButton","filename","filedata","getPageTitle","prepareDownloadData","element","document","createElement","setAttribute","encodeURIComponent","body","appendChild","removeChild","downloadCode","onOptionChange","key","Controls","newOption","Builder","App","Boolean","window","location","hostname","match","initialState","drawGraph","action","xDataChange","yDataChange","hDataChange","sxDataChange","syDataChange","reducer","rootReducer","combineReducers","builderReducer","codeReducer","store","createStore","app","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.a99befe8.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\n\nimport classes from './Toolbar.module.css';\n\n//{props.graphTypes[props.selectedGraph]}\n\nconst toolbar = props => {\n\tconst title = props.graphTypes.filter(obj => obj.type===props.selectedGraph)[0]['label'];\n\n\treturn <header className={classes.Toolbar}>\n\t\t\t\t{title}\n\t\t\t</header>;\n};\n//\nconst mapStateToProps = state => {\n\treturn {\n\t\tgraphTypes \t\t: state.builder.graphTypes,\n\t\tselectedGraph\t: state.builder.selectedGraph\n\t};\n};\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\t\n\t};\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(toolbar);","import React from 'react';\n\nimport classes from './Main.module.css';\n\nconst main = props => (\n\t<div className={classes.Main}>\n\t\t{props.children}\n\t</div>\n);\n\nexport default main;","import React,{ Component } from 'react';\n\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport Main from '../../components/Navigation/Main/Main';\n\n\nclass Layout extends Component {\n\trender(){\n\t\treturn <div>\n\t\t\t\t\t<Toolbar />\n\t\t\t\t\t<Main>\n\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t</Main>\n\t\t\t\t</div>\n\t\t\n\t}\n};\n\nexport default Layout;","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst Input = props => {\n\treturn (\n\t\t<div className={classes.InputDiv} style={{display: props.show ? 'flex' : 'none'}}>\n\t\t\t<label>{props.label} </label>\n\t\t\t<input type=\"text\" onChange={props.changed} value={props.value}/>\n\t\t</div>\n\t);\n};\n\nexport default Input;","import * as actionTypes from './actionTypes';\n\nexport const generateCode = codeData => {\n\treturn {\n\t\ttype: actionTypes.GENERATE_CODE,\n\t\tcodeData: codeData\n\t};\n};","export const DRAW_GRAPH = 'DRAW_GRAPH';\nexport const X_DATA_CHANGE = 'X_DATA_CHANGE';\nexport const Y_DATA_CHANGE = 'Y_DATA_CHANGE';\nexport const H_DATA_CHANGE = 'H_DATA_CHANGE';\nexport const SX_DATA_CHANGE = 'SX_DATA_CHANGE';\nexport const SY_DATA_CHANGE = 'SY_DATA_CHANGE';\n\nexport const GENERATE_CODE = 'GENERATE_CODE';","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport Input from '../../../hoc/UI/Input/Input';\nimport * as actions from '../../../store/actions';\nimport * as graphTypes from '../../Builder/Graph/graphTypes';\n\nimport classes from './InputData.module.css';\n\n\nconst InputData = props => {\n\tlet xData = props.xData.toString();\n\tlet yData = props.yData.toString();\n\tlet hData = props.hData.toString();\n\tlet sxData= props.sxData.toString();\n\tlet syData= props.syData.toString();\n\tlet error = \"\";\n\tif(!/^[0-9,.]+$/.test(yData))\n\t\terror = \"ERROR : Y-Axis data should contain only numbers seperated by , \";\n\tif(xData.split(\",\").length !== yData.split(\",\").length)\n\t\terror = \"ERROR : X-Axis has \"+xData.split(\",\").length+\" elements and Y-Axis has \"+yData.split(\",\").length+\" elements\";\n\tif(!/^[0-9,.]+$/.test(hData))\n\t\terror = \"ERROR : X-Axis data should contain only numbers seperated by , \";\n\tif(sxData.split(\",\").length !== syData.split(\",\").length)\n\t\terror = \"ERROR : X-Axis has \"+sxData.split(\",\").length+\" elements and Y-Axis has \"+syData.split(\",\").length+\" elements\";\n\n\tconst xChanged = (event) => {\n\t\tlet xVal = event.target.value;\n\t\tprops.onXDataChange(xVal.split(\",\"));\n\t};\n\n\tconst yChanged = (event) => {\n\t\tlet yVal = event.target.value;\n\t\tif(/^[0-9,.]*$/.test(yVal))\n\t\t\tprops.onYDataChange(yVal.split(\",\"));\n\t};\n\n\tconst hChanged = (event) => {\n\t\tlet hVal = event.target.value;\n\t\t//console.log(hVal);\n\t\tif(/^[0-9,.]*$/.test(hVal)){\n\t\t\t//console.log(\"coming here\");\n\t\t\tprops.onHDataChange(hVal.split(\",\"));\n\t\t}\n\t};\n\n\tconst sxChanged = (event) => {\n\t\tlet sxVal = event.target.value;\n\t\tif(/^[0-9,.]*$/.test(sxVal))\n\t\t\tprops.onSxDataChanged(sxVal.split(\",\"));\n\t};\n\n\tconst syChanged = (event) => {\n\t\tlet syVal = event.target.value;\n\t\tif(/^[0-9,.]*$/.test(syVal))\n\t\t\tprops.onSyDataChanged(syVal.split(\",\"));\n\t};\n\n\tlet firstInputBox = \"Enter Y-Axis Data\";\n\tlet secondInputBox= \"Enter X-Axis Data\";\n\tlet showFirstBox = true;\n\tlet showSecondBox= false;\n\tlet showScatterBox = false;\n\tif(props.selectedGraph === graphTypes.HORIZONTAL_BAR_CHART){\n\t\tfirstInputBox = \"Enter X-Axis Data\";\n\t\tsecondInputBox= \"Enter Y-Axis Data\";\n\t}\n\tif(props.selectedGraph === graphTypes.PIE_CHART){\n\t\tfirstInputBox = \"Enter Percentages\";\n\t\tsecondInputBox= \"Enter Legend Data\";\n\t}\n\tif(props.selectedGraph === graphTypes.HISTOGRAM){\n\t\tfirstInputBox = \"Enter X-Axis Data\";\n\t\tshowFirstBox = false;\n\t\tshowSecondBox = true;\n\t\tshowScatterBox = false;\n\t}\n\tif(props.selectedGraph === graphTypes.SCATTER_PLOT){\n\t\tshowFirstBox = false;\n\t\tshowSecondBox= false;\n\t\tshowScatterBox= true;\n\t}\n\n\tlet uploadData = \"\";\n\n\tconst fileUpload = (event) => {\n\t\tconst filename = event.target.value;\n\t\tconst extension= filename.split('.').pop();\n\t\tif(extension !== 'csv'){\n\t\t\talert('only CSV files are accepted');\n\t\t\tevent.target.value = '';\n\t\t}\n\t\telse{\n\t\t\tconsole.log(event.target.files[0].type);\n\t\t\tconst reader  = new FileReader();\n\t\t\treader.onload = (event) => uploadData = event.target.result;\n\t\t\treader.readAsText(event.target.files[0]);\n\t\t}\n\t};\n\n\treturn(\n\t\t<div className={classes.InputData}>\n\t\t\t<div className={classes.UploadBtnDiv} style={{display:'none'}}>\n\t\t\t\t<input type='file' id=\"inputfile\" onChange={fileUpload}/>\n\t\t\t</div>\n\t\t\t<div className={classes.TextboxDiv}>\n\t\t\t\t<Input label={firstInputBox } changed={yChanged} value={yData} show={showFirstBox }/>\n\t\t\t\t<Input label={secondInputBox} changed={xChanged} value={xData} show={showFirstBox }/>\n\t\t\t\t<Input label=\"Enter X-Axis Data\" changed={hChanged} value={hData} show={showSecondBox} />\n\t\t\t\t<Input label=\"Enter X-Axis Data\" changed={sxChanged} value={sxData} show={showScatterBox} />\n\t\t\t\t<Input label=\"Enter Y-Axis Data\" changed={syChanged} value={syData} show={showScatterBox} />\n\t\t\t\t<p className={classes.error}>{error}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n//\nconst mapStateToProps = state => {\n\treturn {\n\t\tselectedGraph\t: state.builder.selectedGraph,\n\t\txData\t: state.builder.xData,\n\t\tyData\t: state.builder.yData,\n\t\thData: state.builder.histogramData,\n\t\tsxData\t: state.builder.sxData,\n\t\tsyData\t: state.builder.syData\n\t};\n};\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonXDataChange: (xData) => dispatch(actions.xDataChange(xData)),\n\t\tonYDataChange: (yData) => dispatch(actions.yDataChange(yData)),\n\t\tonHDataChange: (hData) => dispatch(actions.hDataChange(hData)),\n\t\tonSxDataChanged: (sxData) => dispatch(actions.sxDataChange(sxData)),\n\t\tonSyDataChanged: (syData) => dispatch(actions.syDataChange(syData))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputData);","import * as actionTypes from './actionTypes';\n\nexport const drawGraph = graphType => {\n\treturn {\n\t\ttype: actionTypes.DRAW_GRAPH,\n\t\tgraphType: graphType\n\t};\n};\n\nexport const xDataChange = xData => {\n\treturn {\n\t\ttype: actionTypes.X_DATA_CHANGE,\n\t\txData: xData\n\t};\n};\n\nexport const yDataChange = yData => {\n\treturn {\n\t\ttype: actionTypes.Y_DATA_CHANGE,\n\t\tyData: yData\n\t};\n};\n\nexport const hDataChange = hData => {\n\treturn {\n\t\ttype: actionTypes.H_DATA_CHANGE,\n\t\thData: hData\n\t};\n};\n\nexport const sxDataChange = sxData => {\n\treturn {\n\t\ttype: actionTypes.SX_DATA_CHANGE,\n\t\tsxData: sxData\n\t};\n};\n\nexport const syDataChange = syData => {\n\treturn {\n\t\ttype: actionTypes.SY_DATA_CHANGE,\n\t\tsyData: syData\n\t};\n};","export const VERTICAL_BAR_CHART = 'VERTICAL_BAR_CHART';\nexport const HORIZONTAL_BAR_CHART = 'HORIZONTAL_BAR_CHART';\nexport const HISTOGRAM = 'HISTOGRAM';\nexport const PIE_CHART = 'PIE_CHART';\nexport const SCATTER_PLOT = 'SCATTER_PLOT';\nexport const LINE_CHART = 'LINE_CHART';","import React, { useEffect } from 'react';\nimport {connect} from 'react-redux';\n\nimport classes from './Codes.module.css';\nimport * as actions from '../../../../store/actions';\n\n\nconst codeString1 = `\n**********VERTICAL BAR GRAPH CODE****************\n\n`;\n//select the svg in which you want to plot the graph\nconst codeString2 = `\nlet svg = d3.select(\"#graph\").select(\"#chartSVG\");\n\n`;\n// 1. Identify Domain and Data\nconst codeString3 = (xData,yData) => {\nlet xD = xData.map(d => \" '\"+d+\"' \");\n//console.log(xD);\nreturn `\nlet xDomain =[`+xD+`];\nlet data = [`+yData+`];\n\n`\n};\n// 2. Set the maximum value of the y-axis\nconst codeString4 = yData => {\nlet maxVal = 0;\n\tfor(let v in yData)\n\t\tif(parseInt(yData[v]) > maxVal)\n\t\t\tmaxVal = parseInt(yData[v]);\nlet yMax = Math.ceil(maxVal/10) * 10;\nreturn `\nlet yDomain = [0,`+yMax+`]; // range of values (i.e min to max)\n\n`\n};\n// 3. Define Scale\nconst codeString5 = `\nlet xScale = d3.scaleBand()\n                .domain(xDomain)\n                .range([50,400]); // starting and ending points of x-axis on svg \nlet yScale = d3.scaleLinear()\n                .domain(yDomain)\n                .range([350,50]); //starting and ending points of y-axis on svg\n\n`;\n// 4. Define Axis\nconst codeString6 =`\nlet xAxis = d3.axisBottom().scale(xScale);\nlet yAxis = d3.axisLeft().scale(yScale);\n\n`;\n// 5. Append Html Elements of axis\nconst codeString7 =`\nsvg.append('g')\n\t.attr('transform','translate(0,350)')\n\t.call(xAxis)\n\t.selectAll(\"text\")\n\t.attr(\"transform\",\"rotate(-45)\")\n\t.style(\"text-anchor\", \"end\");\n\nsvg.append('g').attr('transform','translate(50,0)').call(yAxis);\n\n`;\n// 6. plot the bars\nconst codeString8 = xData => {\nlet barWidth = (300/xData.length)*0.67;\nreturn `\nsvg.selectAll(\".bar\")\n    .data(data)\n    .enter()\n    .append(\"rect\")\n    .attr(\"x\",function(d,i){ return xScale(xDomain[i])+`+Math.round((barWidth/3)*100)/100+` })\n    .attr(\"y\",function(d){ return yScale(d)})\n    .attr(\"width\",`+Math.round(barWidth*100)/100+`)\n    .attr(\"height\",function(d){ return 350-yScale(d)})\n    .style(\"fill\",\"steelblue\")\n    .on('mouseover',function(d,i){\n        svg.append(\"text\")\n            .text(d)\n            .attr(\"id\",() => 'val'+i)\n            .attr(\"x\",function(){ return xScale(xDomain[i])+`+Math.round((barWidth/2)*100)/100+`})\n            .attr(\"y\",function(){ return yScale(d)-25 })\n        d3.select(this).attr(\"height\",function(d){return 370-yScale(d)});\n        d3.select(this).attr(\"y\",function(d){return yScale(d)-20});\n        d3.select(this).style(\"fill\",\"#325d81\");\n    })\n    .on('mouseout',function(d,i){\n        d3.select(\"#val\"+i).remove();\n        d3.select(this).attr(\"y\",function(d){return yScale(d)});\n        d3.select(this).attr(\"height\",function(d){return 350-yScale(d)});\n        d3.select(this).style(\"fill\",\"steelblue\");\n    });\n\n`\n};\n// 7. Attach the Labels and Title\nconst codeString9 = `\nsvg.append(\"text\")\n    .text(\"Fruit Count\")\n    .style(\"font-size\",\"1.5em\")\n    .attr(\"x\",150)\n    .attr(\"y\",25);\n\nsvg.append(\"text\")\n    .text(\"Fruits\")\n    .attr(\"x\",400)\n    .attr(\"y\",370);\n\nsvg.append(\"text\")\n    .text(\"Count\")\n    .attr(\"x\",-210)\n    .attr(\"y\",20)\n    .attr(\"transform\",\"rotate(-90)\");\n`;\n\nconst getDownloadCode = (xData,yData) => {\n    const codeStr = codeString2+codeString3(xData,yData)+codeString4(yData)+codeString5+codeString6+codeString7+codeString8(xData)+codeString9;\n    //console.log(codeStr);\n    return codeStr;\n};\n\nconst getCode = (xData, yData) => {\n\n\tconst codeStr = <span>\n\t\t\t\t\t\t{codeString1}\n\t\t\t\t\t\t<strong>select the svg in which you want to plot the graph</strong>\n\t\t\t\t\t\t{codeString2}\n\t\t\t\t\t\t<strong>1. Identify Domain and Data</strong>\n\t\t\t\t\t\t{codeString3(xData,yData)}\n\t\t\t\t\t\t<strong>2. Set the maximum value of the y-axis</strong>\n\t\t\t\t\t\t{codeString4(yData)}\n\t\t\t\t\t\t<strong>3. Define Scale</strong>\n\t\t\t\t\t\t{codeString5}\n\t\t\t\t\t\t<strong>4. Define Axis</strong>\n\t\t\t\t\t\t{codeString6}\n\t\t\t\t\t\t<strong>5. Append Html Elements of axis</strong>\n\t\t\t\t\t\t{codeString7}\n\t\t\t\t\t\t<strong>6. plot the bars</strong>\n\t\t\t\t\t\t{codeString8(xData)}\n\t\t\t\t\t\t<strong>7. Attach the Labels and Title</strong>\n\t\t\t\t\t\t{codeString9}\n\t\t\t\t\t</span>;\n\treturn codeStr;\n};\n//\nconst Code = props => {\n\n    useEffect(()=>{\n        props.onMount(getDownloadCode(props.xData,props.yData));\n    });\n\n\treturn (\n\t\t<span className={classes.Codes}>\n\t\t\t{getCode(props.xData, props.yData)}\n\t\t</span>\n\t);\n};\n//\nconst mapDispatchToProps = dispatch => {\n    return {\n        onMount: (jsData) => dispatch(actions.generateCode(jsData))\n    };\n};\n\nexport default connect(null,mapDispatchToProps)(Code);","import React, { useEffect } from 'react';\nimport {connect} from 'react-redux';\n\nimport classes from './Codes.module.css';\nimport * as actions from '../../../../store/actions';\n\n\nconst codeString1 = `\n**********HORIZONTAL BAR GRAPH CODE****************\n\n`;\n\nconst codeString2 = `\nlet svg = d3.select(\"#graph\").select(\"#chartSVG\");\n\n`;\n// 1. Identify Domain\n//let yDomain = ['kiwi','apple','banana','grapes','oranges'];\nconst codeString3 = (xData) => {\nlet xD = xData.map(d => \" '\"+d+\"' \");\nreturn `\nlet yDomain = [`+xD+`];\n\n`\n};\n\n// 2. Define Scale\nconst codeString4 =`\nlet yScale = d3.scaleBand().domain(yDomain).range([350,50]); //starting and ending points\n\n`;\n// 3. Define Axis\nconst codeString5 = `\nlet yAxis = d3.axisLeft().scale(yScale);\n\n`;\n//let data = [57,24,98,67,12];\nconst codeString6 = (yData) => {\nreturn `\nlet data = [`+yData+`];\n\n`\n};\n\n// 4. Creating Html Elements for axis\nconst codeString7 = `\nsvg.append('g').attr('transform','translate(50,0)').call(yAxis);\n\n`;\n// 5. plot the bars\nconst codeString8 = (xData, yData) => {\n\nlet maxVal = 0;\nfor(let v in yData)\n\tif(parseInt(yData[v]) > maxVal)\n\t\tmaxVal = parseInt(yData[v]);\nlet yMax = Math.ceil(maxVal/10) * 10;\n\n\nconst barWidths = [...yData];\nfor(let d in yData)\n    barWidths[d] = 350*yData[d]/yMax;\n\nlet eachItemSpace = 300/(yData.length);\nlet barHeight = eachItemSpace*0.67;\n\nconst barWidths2 = barWidths.map(bw => Math.round(bw*100)/100);\n\nreturn `\n\nlet barWidths = [`+barWidths2.toString()+`];\n\nsvg.selectAll(\".bar\")\n\t    .data(yDomain)\n\t    .enter()\n\t    .append(\"rect\")\n\t    .attr(\"x\",50)\n\t    .attr(\"y\",function(d){ return yScale(d)+`+Math.round((eachItemSpace/6)*100)/100+`})\n\t    .attr(\"width\",function(d,i){ return barWidths[i]})\n\t    .attr(\"height\",`+Math.round(barHeight*100)/100+`)\n\t    .style(\"fill\",\"steelblue\")\n\t    .on('mouseover',function(d,i){\n            svg.append(\"text\")\n                .text(data[i])\n                .attr(\"id\",() => 'val'+i)\n                .attr(\"x\",function(){ return barWidths[i]+55})\n                .attr(\"y\",function(){ return yScale(d)+`+Math.round((eachItemSpace/2)*100)/100+` });\n            d3.select(this).style(\"fill\",\"#325d81\");\n        })\n        .on('mouseout',function(d,i){\n            d3.select(\"#val\"+i).remove();\n            d3.select(this).style(\"fill\",\"steelblue\");\n            d3.select(this)\n                .attr(\"x\",50)\n                .attr(\"y\",function(d){ return yScale(d)+`+Math.round((eachItemSpace/6)*100)/100+`})\n                .attr(\"height\",`+Math.round(barHeight*100)/100+`)\n        });\n\n`\n};\nconst codeString9 = `\nsvg.append(\"text\")\n    .text(\"Fruit Count\")\n    .style(\"font-size\",\"1.5em\")\n    .attr(\"x\",150)\n    .attr(\"y\",25);\n\nsvg.append(\"text\")\n    .text(\"Count\")\n    .attr(\"x\",150)\n    .attr(\"y\",370);\n\nsvg.append(\"text\")\n    .text(\"Fruit\")\n    .attr(\"x\",25)\n    .attr(\"y\",35);\n`;\n\nconst getDownloadCode = (xData,yData) => {\n\treturn codeString2+codeString3(xData)+codeString4+codeString5+codeString6(yData)+codeString7+codeString8(xData,yData)+codeString9;\n};\n\nconst getCode = (xData, yData) => {\n\n\tconst codeStr = <span>\n\t\t\t\t\t\t{codeString1}\n\t\t\t\t\t\t<strong>select the svg in which you want to plot the graph</strong>\n\t\t\t\t\t\t{codeString2}\n\t\t\t\t\t\t<strong>1. Identify Y-Axis Domain</strong>\n\t\t\t\t\t\t{codeString3(xData)}\n\t\t\t\t\t\t<strong>2. Define Scale</strong>\n\t\t\t\t\t\t{codeString4}\n\t\t\t\t\t\t<strong>3. Define Axis</strong>\n\t\t\t\t\t\t{codeString5}\n\t\t\t\t\t\t<strong>4. Identify X-Axis Data</strong>\n\t\t\t\t\t\t{codeString6(yData)}\n\t\t\t\t\t\t<strong>5. Append Html Element of Y-Axis</strong>\n\t\t\t\t\t\t{codeString7}\n\t\t\t\t\t\t<strong>6. plot the bars</strong>\n\t\t\t\t\t\t{codeString8(xData,yData)}\n\t\t\t\t\t\t<strong>7. Attach the Labels and Title</strong>\n\t\t\t\t\t\t{codeString9}\n\t\t\t\t\t</span>;\n\treturn codeStr;\n};\n//\nconst Code = props => {\n\n    useEffect(()=>{\n        props.onMount(getDownloadCode(props.xData,props.yData));\n    });\n\n\treturn (\n\t\t<span className={classes.Codes}>\n\t\t\t{getCode(props.xData, props.yData)}\n\t\t</span>\n\t);\n};\n//\nconst mapDispatchToProps = dispatch => {\n    return {\n        onMount: (jsData) => dispatch(actions.generateCode(jsData))\n    };\n};\n\nexport default connect(null,mapDispatchToProps)(Code);","import React, { useEffect } from 'react';\nimport {connect} from 'react-redux';\n\nimport classes from './Codes.module.css';\nimport * as actions from '../../../../store/actions';\nimport * as d3 from 'd3';\n\nconst codeString1 = `\n**********HISTOGRAM CODE****************\n\n\nCode will come here!\n`;\n\nconst codeString2 = `\nlet svg = d3.select(\"#graph\").select(\"#chartSVG\");\n\n`;\n// 1. Identify Range of Data and create bins\nconst codeString3 = (hData) => {\n\nlet min = hData[0];\nlet max = hData[0];\nfor(let i in hData){\n\tmax = Math.max(hData[i],max);\n\tmin = Math.min(hData[i],min);\n}\n\nmax = Math.ceil(max/20)*20;\nmin = Math.floor(min/20)*20;\n\nlet xScale = d3.scaleLinear().domain([min,max]).range([50,400]);\nlet hist = d3.histogram().domain([min,max]).thresholds(xScale.ticks(5));\nlet bins = hist(hData);\n\nlet maxY = 0;\nbins.forEach(function(d){\n\tif(d.length > maxY)\n\t\tmaxY = d.length;\n});\n\nreturn `\nlet xScale = d3.scaleLinear().domain([`+min+`,`+max+`]).range([50,400]); // create X Scale\nlet hist = d3.histogram().domain([`+min+`,`+max+`]).thresholds(xScale.ticks(5)); // create d3 histogram\nlet bins = hist([`+hData+`]); // d3 will automatically divide the range into bins and return them \n\nlet yScale = d3.scaleLinear().domain([0,`+(Math.ceil(maxY/10) * 10)+`]).range([350,50]); // create Y Scale\n`\n};\n\n// 3. Define Axis\nconst codeString5 = `\nlet xAxis = d3.axisBottom().scale(xScale);\nlet yAxis = d3.axisLeft().scale(yScale);\n\n`;\n\n// 4. Creating Html Elements for axis\nconst codeString7 = `\nsvg.append('g').attr('transform','translate(0,350)').call(xAxis);\nsvg.append('g').attr('transform','translate(50,0)').call(yAxis);\n\n`;\n// 5. plot the bars\nconst codeString8 = `\nsvg.selectAll(\".bar\")\n\t.data(bins)\n\t.enter()\n\t.append(\"rect\")\n\t.on(\"mouseover\",function(){\n\t\td3.select(this).style(\"fill\",\"#325d81\");\n\t\tsvg.append(\"text\")\n\t\t\t.attr(\"class\",\"val\")\n\t\t\t.attr(\"x\",(d3.select(this).attr(\"x\"))-(-10))\n\t\t\t.attr(\"y\",d3.select(this).attr(\"y\")-5)\n\t\t\t.text(d3.select(this).attr(\"yval\"));\n\t})\n\t.on(\"mouseleave\",function(){\n\t\td3.select(this).style(\"fill\",\"steelblue\");\n\t\tsvg.select(\".val\").remove();\n\t\tsvg.select(\".numLable\").remove();\n\t})\n\t.style(\"fill\",\"steelblue\")\n\t.attr(\"x\",function(d){ return xScale(d.x0);})\n\t.attr(\"width\",function(d){return xScale(d.x1)-xScale(d.x0)})\n\t.attr(\"y\",function(d){ return yScale(d.length)})\n\t.attr(\"height\",function(d){ return 350-yScale(d.length)})\n\t.attr(\"yval\",function(d){return d.length});\n\n`;\n\nconst codeString9 = `\nsvg.append(\"text\")\n    .text(\"Histogram\")\n    .style(\"font-size\",\"1.5em\")\n    .attr(\"x\",150)\n    .attr(\"y\",25);\n\nsvg.append(\"text\")\n    .text(\"Range\")\n    .attr(\"x\",350)\n    .attr(\"y\",390);\n\nsvg.append(\"text\")\n    .text(\"Frequency\")\n    .attr(\"x\",-210)\n    .attr(\"y\",20)\n    .attr(\"transform\",\"rotate(-90)\");\n`;\n\n\nconst getDownloadCode = (hData) => {\n\treturn codeString2+codeString3(hData)+codeString5+codeString7+codeString8+codeString9;\n};\n\n\nconst getCode = (hData) => {\n\n\tconst codeStr = <span>\n\t\t\t\t\t\t{codeString1}\n\t\t\t\t\t\t<strong>select the svg in which you want to plot the graph</strong>\n\t\t\t\t\t\t{codeString2}\n\t\t\t\t\t\t<strong>1. Identify Range of Data and create bins, Scale</strong>\n\t\t\t\t\t\t{codeString3(hData)}\n\t\t\t\t\t\t<strong>2. Define Axis</strong>\n\t\t\t\t\t\t{codeString5}\n\t\t\t\t\t\t<strong>3. Append Html Elements of axis</strong>\n\t\t\t\t\t\t{codeString7}\n\t\t\t\t\t\t<strong>4. plot the bars</strong>\n\t\t\t\t\t\t{codeString8}\n\t\t\t\t\t\t<strong>5. Attach the Labels and Title</strong>\n\t\t\t\t\t\t{codeString9}\n\t\t\t\t\t</span>;\n\treturn codeStr;\n};\n//\nconst Code = props => {\n\n    useEffect(()=>{\n        props.onMount(getDownloadCode(props.hData));\n    });\n\n\treturn (\n\t\t<span className={classes.Codes}>\n\t\t\t{getCode(props.hData)}\n\t\t</span>\n\t);\n};\n//\nconst mapDispatchToProps = dispatch => {\n    return {\n        onMount: (jsData) => dispatch(actions.generateCode(jsData))\n    };\n};\n\nexport default connect(null,mapDispatchToProps)(Code);","import React, { useEffect } from 'react';\nimport {connect} from 'react-redux';\n\nimport classes from './Codes.module.css';\nimport * as actions from '../../../../store/actions';\n\n\nconst codeString = `\n**********PIE CHART CODE****************\n\n\nCode will come here!\n`;\n\nconst getDownloadCode = (xData,yData) => {\n\treturn ``;\n};\n\nconst getCode = (xData, yData) => {\n\n\t// const codeStr = <span>\n\t// \t\t\t\t\t{codeString1}\n\t// \t\t\t\t\t<strong>select the svg in which you want to plot the graph</strong>\n\t// \t\t\t\t\t{codeString2}\n\t// \t\t\t\t\t<strong>1. Identify Domain and Data</strong>\n\t// \t\t\t\t\t{codeString3(xData,yData)}\n\t// \t\t\t\t\t<strong>2. Set the maximum value of the y-axis</strong>\n\t// \t\t\t\t\t{codeString4(yData)}\n\t// \t\t\t\t\t<strong>3. Define Scale</strong>\n\t// \t\t\t\t\t{codeString5}\n\t// \t\t\t\t\t<strong>4. Define Axis</strong>\n\t// \t\t\t\t\t{codeString6}\n\t// \t\t\t\t\t<strong>5. Append Html Elements of axis</strong>\n\t// \t\t\t\t\t{codeString7}\n\t// \t\t\t\t\t<strong>6. plot the bars</strong>\n\t// \t\t\t\t\t{codeString8(xData)}\n\t// \t\t\t\t\t<strong>7. Attach the Labels and Title</strong>\n\t// \t\t\t\t\t{codeString9}\n\t// \t\t\t\t</span>;\n\treturn codeString;\n};\n//\nconst Code = props => {\n\n    useEffect(()=>{\n        props.onMount(getDownloadCode(props.xData,props.yData));\n    });\n\n\treturn (\n\t\t<span className={classes.Codes}>\n\t\t\t{getCode(props.xData, props.yData)}\n\t\t</span>\n\t);\n};\n//\nconst mapDispatchToProps = dispatch => {\n    return {\n        onMount: (jsData) => dispatch(actions.generateCode(jsData))\n    };\n};\n\nexport default connect(null,mapDispatchToProps)(Code);","import React, { useEffect } from 'react';\nimport {connect} from 'react-redux';\n\nimport classes from './Codes.module.css';\nimport * as actions from '../../../../store/actions';\n\n\nconst codeString1 = `\n**********SCATTER PLOT CODE****************\n\n\n`;\n\n//select the svg in which you want to plot the graph\nconst codeString2 = `\nlet svg = d3.select(\"#graph\").select(\"#chartSVG\");\n\n`;\n// 1. Identify Domain\nconst codeString3 = (xData,yData) => {\n\nlet xMax = xData[0];\nlet xMin = xData[0];\nlet yMax = yData[0];\nlet yMin = yData[0];\nfor(let i in xData){\n\txMax = Math.max(xData[i],xMax);\n\txMin = Math.min(xData[i],xMin);\n}\nfor(let i in yData){\n\tyMax = Math.max(yData[i],yMax);\n\tyMin = Math.min(yData[i],yMin);\n}\n\nxMax = Math.ceil(xMax/10)*10;\nxMin = Math.floor(xMin/10)*10;\nyMax = Math.ceil(yMax/10)*10;\nyMin = Math.floor(yMin/10)*10;\n\nreturn `\nlet xDomain = [`+xMin+`, `+xMax+`];\nlet yDomain = [`+yMin+`, `+yMax+`];\n\n`\n};\n\n// 2. Identify Data\nconst codeString4 = (xData,yData) => {\nreturn `\nlet xAxisData = [`+xData+`];\nlet yAxisData = [`+yData+`];\n\n`\n};\n\n// 3. Define Scale\nconst codeString5 = `\nlet xScale = d3.scaleLinear().domain(xDomain).range([50,400]); // starting and ending points on svg \nlet yScale = d3.scaleLinear().domain(yDomain).range([350,50]); // starting and ending points\n\n`;\n// 4. Define Axis\nconst codeString6 =`\nlet xAxis = d3.axisBottom().scale(xScale);\nlet yAxis = d3.axisLeft().scale(yScale);\n\n`;\n// 5. Append Html Elements of axis\nconst codeString7 =`\nsvg.append('g').attr('transform','translate(0,350)').call(xAxis);\nsvg.append('g').attr('transform','translate(50,0)').call(yAxis);\n\n`;\n// 6. plot the bars\nconst codeString8 = `\nsvg.selectAll(\".dot\")\n    .data(xAxisData)\n    .enter()\n    .append(\"circle\") // Uses the enter().append() method\n    .attr(\"class\", \"dot\") // Assign a class for styling\n    .attr(\"fill\", \"steelblue\")\n    .attr(\"cx\", function(d) { return xScale(d) })\n    .attr(\"cy\", function(d,i) { return yScale(yAxisData[i]) })\n    .attr(\"r\", 4)\n    .on('mouseover',function(d,i){\n    \tsvg.append(\"text\")\n            .text(\"x:\"+d+\" - y:\"+yAxisData[i])\n            .attr(\"id\",() => 'val'+i)\n            .attr(\"x\",function(){ return xScale(d)-10})\n            .attr(\"y\",function(){ return yScale(yAxisData[i])-10 });\n\n    \td3.select(this).attr(\"fill\",\"red\");\n    })\n    .on('mouseout',function(d,i){\n    \td3.select(\"#val\"+i).remove();\n    \td3.select(this).attr(\"fill\",\"steelblue\");\n    });\n\n`;\n// 7. Attach the Labels and Title\nconst codeString9 = `\nsvg.append(\"text\")\n    .text(\"Scatter Plot\")\n    .style(\"font-size\",\"1.5em\")\n    .attr(\"x\",150)\n    .attr(\"y\",25);\n\nsvg.append(\"text\")\n    .text(\"X-Axis\")\n    .attr(\"x\",350)\n    .attr(\"y\",390);\n\nsvg.append(\"text\")\n    .text(\"Y-Axis\")\n    .attr(\"x\",-210)\n    .attr(\"y\",20)\n    .attr(\"transform\",\"rotate(-90)\");\n`;\n\nconst getDownloadCode = (xData,yData) => {\n\treturn codeString2+codeString3(xData,yData)+codeString4(xData,yData)+codeString5+codeString6+codeString7+codeString8+codeString9;\n};\n\nconst getCode = (xData, yData) => {\n\n\tconst codeStr = <span>\n\t\t\t\t\t\t{codeString1}\n\t\t\t\t\t\t<strong>select the svg in which you want to plot the graph</strong>\n\t\t\t\t\t\t{codeString2}\n\t\t\t\t\t\t<strong>1. Identify Domain and Data</strong>\n\t\t\t\t\t\t{codeString3(xData,yData)}\n\t\t\t\t\t\t<strong>2. Set the maximum value of the y-axis</strong>\n\t\t\t\t\t\t{codeString4(xData,yData)}\n\t\t\t\t\t\t<strong>3. Define Scale</strong>\n\t\t\t\t\t\t{codeString5}\n\t\t\t\t\t\t<strong>4. Define Axis</strong>\n\t\t\t\t\t\t{codeString6}\n\t\t\t\t\t\t<strong>5. Append Html Elements of axis</strong>\n\t\t\t\t\t\t{codeString7}\n\t\t\t\t\t\t<strong>6. plot the bars</strong>\n\t\t\t\t\t\t{codeString8}\n\t\t\t\t\t\t<strong>7. Attach the Labels and Title</strong>\n\t\t\t\t\t\t{codeString9}\n\t\t\t\t\t</span>;\n\treturn codeStr;\n};\n//\nconst Code = props => {\n\n    useEffect(()=>{\n        props.onMount(getDownloadCode(props.xData,props.yData));\n    });\n\n\treturn (\n\t\t<span className={classes.Codes}>\n\t\t\t{getCode(props.xData, props.yData)}\n\t\t</span>\n\t);\n};\n//\nconst mapDispatchToProps = dispatch => {\n    return {\n        onMount: (jsData) => dispatch(actions.generateCode(jsData))\n    };\n};\n\nexport default connect(null,mapDispatchToProps)(Code);","import React, { useEffect } from 'react';\nimport {connect} from 'react-redux';\n\nimport classes from './Codes.module.css';\nimport * as actions from '../../../../store/actions';\n\n\nconst codeString1 = `\n**********Line GRAPH CODE****************\n\n\n`;\n\n//select the svg in which you want to plot the graph\nconst codeString2 = `\nlet svg = d3.select(\"#graph\").select(\"#chartSVG\");\n\n`;\n// 1. Identify Domain\nconst codeString3 = (xData,yData) => {\nlet xD = xData.map(d => \" '\"+d+\"' \");\nlet maxVal = 0;\nfor(let v in yData)\n\tif(parseInt(yData[v]) > maxVal)\n\t\tmaxVal = parseInt(yData[v]);\nlet yMax = Math.ceil(maxVal/10) * 10;\n\n//console.log(xD);\nreturn `\nlet xDomain = [`+xD+`];\nlet yDomain = [0, `+yMax+`]; // range of values (i.e min to max)\n\n`\n};\n\n// 2. Identify Data\nconst codeString4 = yData => {\nreturn `\nlet data = [`+yData+`]; // range of values (i.e min to max)\n\n`\n};\n\n// 3. Define Scale\nconst codeString5 = `\nlet xScale = d3.scaleBand().domain(xDomain).range([50,400]); // starting and ending points on svg \nlet yScale = d3.scaleLinear().domain(yDomain).range([350,50]); //starting and ending points\n\n`;\n// 4. Define Axis\nconst codeString6 =`\nlet xAxis = d3.axisBottom().scale(xScale);\nlet yAxis = d3.axisLeft().scale(yScale);\n\n`;\n// 5. Append Html Elements of axis\nconst codeString7 =`\nsvg.append('g')\n\t.attr('transform','translate(0,350)')\n\t.call(xAxis)\n\t.selectAll(\"text\")\n\t.attr(\"transform\",\"rotate(-45)\")\n\t.style(\"text-anchor\", \"end\");\nsvg.append('g').attr('transform','translate(50,0)').call(yAxis);\n\n`;\n// 6. plot the bars\nconst codeString8 = xData => {\nlet addWidth = Math.round((350/xData.length)*100)/100;\nreturn `\nsvg.append(\"path\")\n    .datum(data)\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"steelblue\")\n    .attr(\"stroke-width\", 2.5)\n    .attr(\"d\", d3.line()\n      .x(function(d,i) { return xScale(xDomain[i])+`+(addWidth/2)+` })\n      .y(function(d) { return yScale(d) })\n    );\n\nsvg.selectAll(\".dot\")\n    .data(xDomain)\n    .enter()\n    .append(\"circle\") // Uses the enter().append() method\n    .attr(\"class\", \"dot\") // Assign a class for styling\n    .attr(\"fill\", \"steelblue\")\n    .attr(\"cx\", function(d) { return xScale(d)+`+(addWidth/2)+` })\n    .attr(\"cy\", function(d,i) { return yScale(data[i]) })\n    .attr(\"r\", 4)\n    .on('mouseover',function(d,i){\n    \tsvg.append(\"text\")\n            .text(d+\":\"+data[i])\n            .attr(\"id\",() => 'val'+i)\n            .attr(\"x\",function(){ return xScale(d)-10})\n            .attr(\"y\",function(){ return yScale(data[i])-10 });\n\n    \td3.select(this).attr(\"fill\",\"red\");\n    })\n    .on('mouseout',function(d,i){\n    \td3.select(\"#val\"+i).remove();\n    \td3.select(this).attr(\"fill\",\"steelblue\");\n    });\n\n`\n};\n// 7. Attach the Labels and Title\nconst codeString9 = `\nsvg.append(\"text\")\n    .text(\"Fruit Count\")\n    .style(\"font-size\",\"1.5em\")\n    .attr(\"x\",150)\n    .attr(\"y\",25);\n\nsvg.append(\"text\")\n    .text(\"Fruit\")\n    .attr(\"x\",400)\n    .attr(\"y\",370);\n\nsvg.append(\"text\")\n    .text(\"Count\")\n    .attr(\"x\",-210)\n    .attr(\"y\",20)\n    .attr(\"transform\",\"rotate(-90)\");\n`;\n\n\nconst getDownloadCode = (xData,yData) => {\n\treturn codeString2+codeString3(xData,yData)+codeString4(yData)+codeString5+codeString6+codeString7+codeString8(xData)+codeString9;\n};\n\nconst getCode = (xData, yData) => {\n\n\tconst codeStr = <span>\n\t\t\t\t\t\t{codeString1}\n\t\t\t\t\t\t<strong>select the svg in which you want to plot the graph</strong>\n\t\t\t\t\t\t{codeString2}\n\t\t\t\t\t\t<strong>1. Identify Domain</strong>\n\t\t\t\t\t\t{codeString3(xData,yData)}\n\t\t\t\t\t\t<strong>2. Identify Data</strong>\n\t\t\t\t\t\t{codeString4(yData)}\n\t\t\t\t\t\t<strong>3. Define Scale</strong>\n\t\t\t\t\t\t{codeString5}\n\t\t\t\t\t\t<strong>4. Define Axis</strong>\n\t\t\t\t\t\t{codeString6}\n\t\t\t\t\t\t<strong>5. Append Html Elements of axis</strong>\n\t\t\t\t\t\t{codeString7}\n\t\t\t\t\t\t<strong>6. plot the bars</strong>\n\t\t\t\t\t\t{codeString8(xData)}\n\t\t\t\t\t\t<strong>7. Attach the Labels and Title</strong>\n\t\t\t\t\t\t{codeString9}\n\t\t\t\t\t</span>;\n\treturn codeStr;\n};\n//\nconst Code = props => {\n\n    useEffect(()=>{\n        props.onMount(getDownloadCode(props.xData,props.yData));\n    });\n\n\treturn (\n\t\t<span className={classes.Codes}>\n\t\t\t{getCode(props.xData, props.yData)}\n\t\t</span>\n\t);\n};\n//\nconst mapDispatchToProps = dispatch => {\n    return {\n        onMount: (jsData) => dispatch(actions.generateCode(jsData))\n    };\n};\n\nexport default connect(null,mapDispatchToProps)(Code);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport * as graphTypes from '../../Builder/Graph/graphTypes';\nimport classes from './CodeSnippet.module.css';\n\nimport VeriticalBarGraphCode from './Codes/verticalBarGraphCode.js';\nimport HorizontalBarGraphCode from './Codes/horizontalBarGraphCode';\nimport HistogramCode from './Codes/histogramCode';\nimport PieChartCode from './Codes/pieChartCode';\nimport ScatterPlotCode from './Codes/scatterPlotCode';\nimport LineChartCode from './Codes/lineChartCode';\n\nconst getCode = (graphType, xData, yData, hData, sxData, syData) => {\n\tswitch(graphType){\n\t\tcase graphTypes.VERTICAL_BAR_CHART \t: return <VeriticalBarGraphCode xData={xData} yData={yData}/>;\n\t\tcase graphTypes.HORIZONTAL_BAR_CHART: return <HorizontalBarGraphCode xData={xData} yData={yData}/>;\n\t\tcase graphTypes.HISTOGRAM \t\t\t: return <HistogramCode hData={hData}/>;\n\t\tcase graphTypes.PIE_CHART \t\t\t: return <PieChartCode xData={xData} yData={yData}/>;\n\t\tcase graphTypes.SCATTER_PLOT \t\t: return <ScatterPlotCode xData={sxData} yData={syData}/>;\n\t\tcase graphTypes.LINE_CHART \t\t\t: return <LineChartCode xData={xData} yData={yData}/>;\n\t\tdefault: return <p> Some Error Has Occured!!!</p>;\n\t};\n};\n//\nconst CodeSnippet = props => {\n\treturn(\n\t\t<div className={classes.CodeSnippet}>\n\t\t\t{getCode(props.selectedGraph, props.xData, props.yData, props.hData, props.sxData, props.syData)}\n\t\t</div>\n\t);\n};\n//\nconst mapStateToProps = state => {\n\treturn {\n\t\tselectedGraph\t: state.builder.selectedGraph,\n\t\txData\t: state.builder.xData,\n\t\tyData\t: state.builder.yData,\n\t\thData\t: state.builder.histogramData,\n\t\tsxData\t: state.builder.sxData,\n\t\tsyData\t: state.builder.syData\n\t};\n};\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\t\n\t};\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CodeSnippet);","import React from 'react';\n\nimport InputData from './Data/InputData';\nimport CodeSnippet from './CodeSnippet/CodeSnippet';\n\nimport classes from './Code.module.css';\n\nconst code = props => {\n\treturn (\n\t\t<div className={classes.Code}>\n\t\t\t<InputData />\n\t\t\t<CodeSnippet />\n\t\t</div>\n\t);\n};\n\nexport default code;","import React, { useEffect } from 'react';\nimport * as d3 from 'd3'; \n\nconst plotChart = (xData, yData) => {\n\tlet graphDiv = <div id=\"graph\" ><svg id=\"chartSVG\" width=\"450px\" height=\"400px\"></svg></div>;\n\n\tlet svg = d3.select(\"#graph\").select(\"#chartSVG\");\n\td3.select(\"#graph\").select(\"#chartSVG\").selectAll(\"*\").remove();\t\n\n\t// 1. Identify Domain\n\t//let xDomain = ['kiwi','apple','banana','grapes','oranges'];\n\tlet xDomain = xData;\n\tlet maxVal = 0;\n\t//console.log(yData);\n\tfor(let v in yData)\n\t\tif(parseInt(yData[v]) > maxVal)\n\t\t\tmaxVal = parseInt(yData[v]);\n\tlet yMax = Math.ceil(maxVal/10) * 10;\n\t//console.log(maxVal);\n\tlet yDomain = [0,yMax]; // range of values (i.e min to max)\n\n\t// 2. Define Scale\n\tlet xScale = d3.scaleBand()\n\t                .domain(xDomain)\n\t                .range([50,400]); // starting and ending points on svg \n\tlet yScale = d3.scaleLinear()\n\t                .domain(yDomain)\n\t                .range([350,50]); //starting and ending points\n\n\t// 3. Define Axis\n\tlet xAxis = d3.axisBottom().scale(xScale);\n\tlet yAxis = d3.axisLeft().scale(yScale);\n\n\t//let data = [57,24,98,67,12];\n\tlet data = yData;\n\n\t// 4. Creating Html Elements for axis\n\t//let xAxisElement = \n\tsvg.append('g')\n\t\t.attr('transform','translate(0,350)')\n\t\t.call(xAxis)\n\t\t.selectAll(\"text\")\n\t\t.attr(\"transform\",\"rotate(-45)\")\n\t\t.style(\"text-anchor\", \"end\");\n\t//let yAxisElement = \n\tsvg.append('g').attr('transform','translate(50,0)').call(yAxis);\n\n\tlet barWidth = (300/xData.length)*0.67;\n\n\tconst onHoverHeightChange = 20;\n\tconst onHoverColor = \"#325d81\";\n\t// plot the bars\n\tsvg.selectAll(\".bar\")\n\t    .data(data)\n\t    .enter()\n\t    .append(\"rect\")\n\t    .attr(\"x\",function(d,i){ return xScale(xDomain[i]) ? xScale(xDomain[i])+barWidth/3 : -200})\n\t    .attr(\"y\",function(d){ return yScale(d)})\n\t    .attr(\"width\",barWidth)\n\t    .attr(\"height\",function(d){ return 350-yScale(d)})\n\t    .style(\"fill\",\"steelblue\")\n\t    .on('mouseover',function(d,i){\n\t        svg.append(\"text\")\n\t            .text(d)\n\t            .attr(\"id\",() => 'val'+i)\n\t            .attr(\"x\",function(){ return xScale(xDomain[i])+barWidth/2})\n\t            .attr(\"y\",function(){ return yScale(d)-5-onHoverHeightChange })\n\n\t        d3.select(this).attr(\"height\",function(d){return 350-yScale(d)+onHoverHeightChange});\n\t        d3.select(this).attr(\"y\",function(d){return yScale(d)-onHoverHeightChange});\n\t        d3.select(this).style(\"fill\",onHoverColor);\n\t    })\n\t    .on('mouseout',function(d,i){\n\t        d3.select(\"#val\"+i).remove();\n\t        d3.select(this).attr(\"y\",function(d){return yScale(d)});\n\t        d3.select(this).attr(\"height\",function(d){return 350-yScale(d)});\n\t        d3.select(this).style(\"fill\",\"steelblue\");\n\t    });\n\n\tsvg.append(\"text\")\n\t    .text(\"Fruit Count\")\n\t    .style(\"font-size\",\"1.5em\")\n\t    .attr(\"x\",150)\n\t    .attr(\"y\",25);\n\n\tsvg.append(\"text\")\n\t    .text(\"Fruits\")\n\t    .attr(\"x\",400)\n\t    .attr(\"y\",370);\n\n\tsvg.append(\"text\")\n\t    .text(\"Count\")\n\t    .attr(\"x\",-210)\n\t    .attr(\"y\",20)\n\t    .attr(\"transform\",\"rotate(-90)\");\n\n\treturn graphDiv;\n};\n\n\n\nconst Graph = props => {\n\n\t// console.log(props.xData);\n\t// console.log(props.yData);\n\t// const graphDiv = <div id=\"graph\" className={classes.Plot}></div>;\n\tuseEffect(()=>{plotChart(props.xData, props.yData)},[]);\n\n\treturn plotChart(props.xData, props.yData);\n};\n\nexport default Graph;","import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\n//import classes from './Plot.module.css';\n\nconst plotChart = (xData, yData) => {\n\tlet graphDiv = <div id=\"graph\" ><svg id=\"chartSVG\" width=\"450px\" height=\"400px\"></svg></div>;\n\n\tlet svg = d3.select(\"#graph\").select(\"#chartSVG\");\n\td3.select(\"#graph\").select(\"#chartSVG\").selectAll(\"*\").remove();\t\n\n\t// 1. Identify Domain\n\t//let yDomain = ['kiwi','apple','banana','grapes','oranges'];\n\tlet yDomain = xData;\n\tlet maxVal = 0;\n\tfor(let v in yData)\n\t\tif(parseInt(yData[v]) > maxVal)\n\t\t\tmaxVal = parseInt(yData[v]);\n\tlet yMax = Math.ceil(maxVal/10) * 10;\n\n\t// 2. Define Scale\n\tlet yScale = d3.scaleBand().domain(yDomain).range([350,50]); //starting and ending points\n\n\t// 3. Define Axis\n\tlet yAxis = d3.axisLeft().scale(yScale);\n\n\t//let data = [57,24,98,67,12];\n\tlet data = yData;\n\tconst barWidths = [...data];\n    for(let d in data)\n        barWidths[d] = 350*data[d]/yMax;\n\n    let eachItemSpace = 300/(data.length);\n    let barHeight = eachItemSpace*0.67;\n\n\t// 4. Creating Html Elements for axis\n\tsvg.append('g').attr('transform','translate(50,0)').call(yAxis);\n\n\tconst onHoverColor = \"#325d81\";\n\t// 5. plot the bars\n\tsvg.selectAll(\".bar\")\n\t    .data(yDomain)\n\t    .enter()\n\t    .append(\"rect\")\n\t    .attr(\"x\",50)\n\t    .attr(\"y\",function(d){ return yScale(d)+(eachItemSpace/6)})\n\t    .attr(\"width\",function(d,i){ return barWidths[i]})\n\t    .attr(\"height\",barHeight)\n\t    .style(\"fill\",\"steelblue\")\n\t    .on('mouseover',function(d,i){\n            svg.append(\"text\")\n                .text(data[i])\n                .attr(\"id\",() => 'val'+i)\n                .attr(\"x\",function(){ return barWidths[i]+55})\n                .attr(\"y\",function(){ return yScale(d)+(eachItemSpace/2) });\n            d3.select(this).style(\"fill\",onHoverColor);\n        })\n        .on('mouseout',function(d,i){\n            d3.select(\"#val\"+i).remove();\n            d3.select(this).style(\"fill\",\"steelblue\");\n            d3.select(this)\n                .attr(\"x\",50)\n                .attr(\"y\",function(d){ return yScale(d)+(eachItemSpace/6)})\n                .attr(\"height\",barHeight)\n        });\n\n\tsvg.append(\"text\")\n\t    .text(\"Fruit Count\")\n\t    .style(\"font-size\",\"1.5em\")\n\t    .attr(\"x\",150)\n\t    .attr(\"y\",25);\n\n\tsvg.append(\"text\")\n        .text(\"Count\")\n        .attr(\"x\",150)\n        .attr(\"y\",370);\n\n    svg.append(\"text\")\n        .text(\"Fruit\")\n        .attr(\"x\",25)\n        .attr(\"y\",35);\n\n\treturn graphDiv;\n};\n\nconst Graph = props => {\n\tuseEffect(()=>{plotChart(props.xData, props.yData)},[]);\n\treturn plotChart(props.xData, props.yData);\n};\n//\nexport default Graph;","import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\n//import classes from './Plot.module.css';\n\nconst plotChart = (hData) => {\n\tlet graphDiv = <div id=\"graph\" ><svg id=\"chartSVG\" width=\"450px\" height=\"400px\"></svg></div>;\n\n\tlet svg = d3.select(\"#graph\").select(\"#chartSVG\");\n\td3.select(\"#graph\").select(\"#chartSVG\").selectAll(\"*\").remove();\n\n\tlet min = hData[0];\n\tlet max = hData[0];\n\tfor(let i in hData){\n\t\tmax = Math.max(hData[i],max);\n\t\tmin = Math.min(hData[i],min);\n\t}\n\n\tmax = Math.ceil(max/20)*20;\n\tmin = Math.floor(min/20)*20;\n\t//console.log(max,min);\n\n\tlet xScale = d3.scaleLinear().domain([min,max]).range([50,400]);\n\tlet hist = d3.histogram().domain([min,max]).thresholds(xScale.ticks(5));\n\tlet bins = hist(hData);\n\t//console.log(bins);\n\tlet maxY = 0;\n\tbins.forEach(function(d){\n\t\tif(d.length > maxY)\n\t\t\tmaxY = d.length;\n\t});\n\n\tlet yScale = d3.scaleLinear().domain([0,Math.ceil(maxY/10) * 10]).range([350,50]);\n\n\t// 3. Define Axis\n\tlet xAxis = d3.axisBottom().scale(xScale);\n\tlet yAxis = d3.axisLeft().scale(yScale);\n\n\t// 4. Creating Html Elements for axis\n\tsvg.append('g').attr('transform','translate(0,350)').call(xAxis);\n\tsvg.append('g').attr('transform','translate(50,0)').call(yAxis);\n\n\tsvg.selectAll(\".bar\")\n\t\t.data(bins)\n\t\t.enter()\n\t\t.append(\"rect\")\n\t\t.on(\"mouseover\",function(){\n\t\t\td3.select(this).style(\"fill\",\"#325d81\");\n\t\t\tsvg.append(\"text\")\n\t\t\t\t.attr(\"class\",\"val\")\n\t\t\t\t.attr(\"x\",(d3.select(this).attr(\"x\"))-(-10))\n\t\t\t\t.attr(\"y\",d3.select(this).attr(\"y\")-5)\n\t\t\t\t.text(d3.select(this).attr(\"yval\"));\n\t\t})\n\t\t.on(\"mouseleave\",function(){\n\t\t\td3.select(this).style(\"fill\",\"steelblue\");\n\t\t\tsvg.select(\".val\").remove();\n\t\t\tsvg.select(\".numLable\").remove();\n\t\t})\n\t\t.style(\"fill\",\"steelblue\")\n\t\t.attr(\"x\",function(d){ return xScale(d.x0);})\n\t\t.attr(\"width\",function(d){return xScale(d.x1)-xScale(d.x0)})\n\t\t// .attr(\"y\",function(d){ return yScale(0)-80;})\n\t\t// .attr(\"height\",0)\n\t\t// .transition()\n\t\t// .duration(500)\n\t\t.attr(\"y\",function(d){ return yScale(d.length)})\n\t\t.attr(\"height\",function(d){ return 350-yScale(d.length)})\n\t\t.attr(\"yval\",function(d){return d.length});\n\n\n\tsvg.append(\"text\")\n\t    .text(\"Histogram\")\n\t    .style(\"font-size\",\"1.5em\")\n\t    .attr(\"x\",150)\n\t    .attr(\"y\",25);\n\n\tsvg.append(\"text\")\n\t    .text(\"Range\")\n\t    .attr(\"x\",350)\n\t    .attr(\"y\",390);\n\n\tsvg.append(\"text\")\n\t    .text(\"Frequency\")\n\t    .attr(\"x\",-210)\n\t    .attr(\"y\",20)\n\t    .attr(\"transform\",\"rotate(-90)\");\n\n\treturn graphDiv;\n};\n\nconst Graph = props => {\n\n\tuseEffect(()=>{plotChart(props.hData)},[]);\n\n\treturn plotChart(props.hData);\n};\n\nexport default Graph;","import React from 'react';\n//import * as d3 from 'd3';\n\nimport classes from './Plot.module.css';\n\nconst graph = props => {\n\n\treturn (\n\t\t<div id=\"graph\" className={classes.Plot}>\n\t\t\tPie Chart will appear here.\n\t\t</div>\n\t);\n};\n\nexport default graph;","import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\n//import classes from './Plot.module.css';\n\nconst plotChart = (xData, yData) => {\n\tlet graphDiv = <div id=\"graph\" ><svg id=\"chartSVG\" width=\"450px\" height=\"400px\"></svg></div>;\n\n\tlet svg = d3.select(\"#graph\").select(\"#chartSVG\");\n\td3.select(\"#graph\").select(\"#chartSVG\").selectAll(\"*\").remove();\n\n\tlet xMax = xData[0];\n\tlet xMin = xData[0];\n\tlet yMax = yData[0];\n\tlet yMin = yData[0];\n\tfor(let i in xData){\n\t\txMax = Math.max(xData[i],xMax);\n\t\txMin = Math.min(xData[i],xMin);\n\t}\n\tfor(let i in yData){\n\t\tyMax = Math.max(yData[i],yMax);\n\t\tyMin = Math.min(yData[i],yMin);\n\t}\n\n\txMax = Math.ceil(xMax/10)*10;\n\txMin = Math.floor(xMin/10)*10;\n\tyMax = Math.ceil(yMax/10)*10;\n\tyMin = Math.floor(yMin/10)*10;\n\n\tlet xDomain = [xMin, xMax];\n\tlet yDomain = [yMin, yMax];\n\n\t// 2. Define Scale\n\tlet xScale = d3.scaleLinear().domain(xDomain).range([50,400]); // starting and ending points on svg \n\tlet yScale = d3.scaleLinear().domain(yDomain).range([350,50]); // starting and ending points\n\n\t// 3. Define Axis\n\tlet xAxis = d3.axisBottom().scale(xScale);\n\tlet yAxis = d3.axisLeft().scale(yScale);\n\n\t// 4. Creating HTML Elements\n\tsvg.append('g').attr('transform','translate(0,350)').call(xAxis);\n\tsvg.append('g').attr('transform','translate(50,0)').call(yAxis);\n\n\tsvg.selectAll(\".dot\")\n        .data(xData)\n        .enter()\n        .append(\"circle\") // Uses the enter().append() method\n        .attr(\"class\", \"dot\") // Assign a class for styling\n        .attr(\"fill\", \"steelblue\")\n        .attr(\"cx\", function(d) { return xScale(d) })\n        .attr(\"cy\", function(d,i) { return yScale(yData[i]) })\n        .attr(\"r\", 4)\n        .on('mouseover',function(d,i){\n        \tsvg.append(\"text\")\n\t            .text(\"x:\"+d+\" - y:\"+yData[i])\n\t            .attr(\"id\",() => 'val'+i)\n\t            .attr(\"x\",function(){ return xScale(d)-10})\n\t            .attr(\"y\",function(){ return yScale(yData[i])-10 });\n\n        \td3.select(this).attr(\"fill\",\"red\");\n        })\n        .on('mouseout',function(d,i){\n        \td3.select(\"#val\"+i).remove();\n        \td3.select(this).attr(\"fill\",\"steelblue\");\n        });\n\n\tsvg.append(\"text\")\n\t    .text(\"Scatter Plot\")\n\t    .style(\"font-size\",\"1.5em\")\n\t    .attr(\"x\",150)\n\t    .attr(\"y\",25);\n\n\tsvg.append(\"text\")\n\t    .text(\"X-Axis\")\n\t    .attr(\"x\",350)\n\t    .attr(\"y\",390);\n\n\tsvg.append(\"text\")\n\t    .text(\"Y-Axis\")\n\t    .attr(\"x\",-210)\n\t    .attr(\"y\",20)\n\t    .attr(\"transform\",\"rotate(-90)\");\n\n\treturn graphDiv;\n};\n\nconst Graph = props => {\n\n\tuseEffect(()=>{plotChart(props.xData, props.yData)},[]);\n\n\treturn plotChart(props.xData, props.yData);\n};\n\nexport default Graph;","import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\n//import classes from './Plot.module.css';\n\nconst plotChart = (xData, yData) => {\n\tlet graphDiv = <div id=\"graph\" ><svg id=\"chartSVG\" width=\"450px\" height=\"400px\"></svg></div>;\n\n\tlet svg = d3.select(\"#graph\").select(\"#chartSVG\");\n\td3.select(\"#graph\").select(\"#chartSVG\").selectAll(\"*\").remove();\n\n\t// 1. Identify Domain\n\tlet xDomain = xData;\n\tlet maxVal = 0;\n\tfor(let v in yData)\n\t\tif(parseInt(yData[v]) > maxVal)\n\t\t\tmaxVal = parseInt(yData[v]);\n\tlet yMax = Math.ceil(maxVal/10) * 10;\n\tlet yDomain = [0,yMax]; // range of values (i.e min to max)\n\n\t// 2. Define Scale\n\tlet xScale = d3.scaleBand().domain(xDomain).range([50,400]); // starting and ending points on svg \n\tlet yScale = d3.scaleLinear().domain(yDomain).range([350,50]); //starting and ending points\n\n\t// 3. Define Axis\n\tlet xAxis = d3.axisBottom().scale(xScale);\n\tlet yAxis = d3.axisLeft().scale(yScale);\n\n\t//let data = [57,24,98,67,12];\n\tlet data = yData;\n\n\t// 4. Creating Html Elements for axis\n\tsvg.append('g')\n\t\t.attr('transform','translate(0,350)')\n\t\t.call(xAxis)\n\t\t.selectAll(\"text\")\n\t\t.attr(\"transform\",\"rotate(-45)\")\n\t\t.style(\"text-anchor\", \"end\");\n\tsvg.append('g').attr('transform','translate(50,0)').call(yAxis);\n\n\tlet addWidth = Math.round((350/xData.length)*100)/100;\n\n\tsvg.append(\"path\")\n        .datum(yData)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"steelblue\")\n        .attr(\"stroke-width\", 2.5)\n        .attr(\"d\", d3.line()\n          .x(function(d,i) { return xScale(xData[i])+(addWidth/2) })\n          .y(function(d) { return yScale(d) })\n        );\n\n    svg.selectAll(\".dot\")\n        .data(xData)\n        .enter()\n        .append(\"circle\") // Uses the enter().append() method\n        .attr(\"class\", \"dot\") // Assign a class for styling\n        .attr(\"fill\", \"steelblue\")\n        .attr(\"cx\", function(d) { return xScale(d)+(addWidth/2) })\n        .attr(\"cy\", function(d,i) { return yScale(yData[i]) })\n        .attr(\"r\", 4)\n        .on('mouseover',function(d,i){\n        \tsvg.append(\"text\")\n\t            .text(d+\":\"+yData[i])\n\t            .attr(\"id\",() => 'val'+i)\n\t            .attr(\"x\",function(){ return xScale(d)-10})\n\t            .attr(\"y\",function(){ return yScale(yData[i])-10 });\n\n        \td3.select(this).attr(\"fill\",\"red\");\n        })\n        .on('mouseout',function(d,i){\n        \td3.select(\"#val\"+i).remove();\n        \td3.select(this).attr(\"fill\",\"steelblue\");\n        });\n\n\n\tsvg.append(\"text\")\n\t    .text(\"Fruit Count\")\n\t    .style(\"font-size\",\"1.5em\")\n\t    .attr(\"x\",150)\n\t    .attr(\"y\",25);\n\n\tsvg.append(\"text\")\n\t    .text(\"Fruit\")\n\t    .attr(\"x\",400)\n\t    .attr(\"y\",370);\n\n\tsvg.append(\"text\")\n\t    .text(\"Count\")\n\t    .attr(\"x\",-210)\n\t    .attr(\"y\",20)\n\t    .attr(\"transform\",\"rotate(-90)\");\n\n\treturn graphDiv;\n};\n\nconst Graph = props => {\n\n\tuseEffect(()=>{plotChart(props.xData, props.yData)},[]);\n\n\treturn plotChart(props.xData, props.yData);\n};\n\nexport default Graph;","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport VerticalBarGraph from './Plots/verticalBarGraph';\nimport HorizontalBarGraph from './Plots/horizontalBarGraph';\nimport Histogram from './Plots/histogram';\nimport PieChart from './Plots/pieChart';\nimport ScatterPlot from './Plots/scatterPlot';\nimport LineGraph from './Plots/lineGraph';\n\nimport classes from './Graph.module.css';\nimport * as graphTypes from './graphTypes';\n\n\nconst getPlot = (type, xData, yData, hData, sxData, syData) => {\n\tswitch(type){\n\t\tcase graphTypes.VERTICAL_BAR_CHART \t: return <VerticalBarGraph xData={xData} yData={yData}/>;\n\t\tcase graphTypes.HORIZONTAL_BAR_CHART: return <HorizontalBarGraph xData={xData} yData={yData}/>;\n\t\tcase graphTypes.HISTOGRAM \t\t\t: return <Histogram hData={hData}/>;\n\t\tcase graphTypes.PIE_CHART \t\t\t: return <PieChart xData={xData} yData={yData}/>;\n\t\tcase graphTypes.SCATTER_PLOT \t\t: return <ScatterPlot xData={sxData} yData={syData}/>;\n\t\tcase graphTypes.LINE_CHART \t\t\t: return <LineGraph xData={xData} yData={yData}/>;\n\t\tdefault: return <p>Some Error Has Occured!!!</p>;\n\t}\n};\n//\nconst graph = props => {\n\treturn (\n\t\t<div className={classes.Graph} id=\"graph\">\n\t\t\t{getPlot(props.selectedGraph, props.xData, props.yData, props.hData, props.sxData, props.syData)}\n\t\t</div>\n\t);\n};\n//\nconst mapStateToProps = state => {\n\treturn {\n\t\tselectedGraph\t: state.builder.selectedGraph,\n\t\txData\t: state.builder.xData,\n\t\tyData\t: state.builder.yData,\n\t\thData\t: state.builder.histogramData,\n\t\tsxData\t: state.builder.sxData,\n\t\tsyData\t: state.builder.syData\n\t};\n};\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\t\n\t};\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(graph);","import React from 'react';\n\nimport classes from './Select.module.css';\n\nconst select = props => {\n\n\tconst changed = (event) => {props.changeHandler(event.target.value)};\n\n\treturn (\n\t\t<div className={classes.Component}>\n\t\t\t<label className={classes.Label}> Select Graph</label>\n\t\t\t<select className={classes.Select} onChange={changed}>\n\t\t\t\t{props.options}\n\t\t\t</select>\n\t\t</div>\n\t);\n};\n\nexport default select;","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = props => {\n\treturn (\n\t\t<button onClick={props.click} className={classes.Button}>\n\t\t\t{props.children}\n\t\t</button>\n\t);\n};\n\nexport default Button;","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport Button from '../../../hoc/UI/Button/Button';\nimport * as graphTypes from '../Graph/graphTypes';\n\nimport classes from './DownloadCodeButton.module.css';\n\nconst htmlCode1 = `\n<html>\n\t<head>\n\t\t<title>`;\n//Title of HTML PAGE\nconst htmlCode2 = `</title>\n\t\t<script src=\"https://d3js.org/d3.v5.min.js\"></script>\n\t</head>\n\t<body>\n\t\t<div id=\"graph\" style=\"text-align:center\">\n\t\t\t<svg id=\"chartSVG\" width=\"450px\" height=\"400px\">\n\t\t\t</svg>\n\t\t</div>\n\t\t<script>\n\t\t`;\nconst htmlCode3 = `\n\t\t</script>\n\t\t<div style=\"position:fixed;top:90%;left:0;height:10%;background-color:steelblue;text-align:center;color:white;width:100%;padding-top:20px;min-height:60px\"> This Page is created using D3 CODE BUILDER</div>\n\t</body>\n</html>\n`;\n\nconst getPageTitle = filename => {\n\tswitch(filename){\n\t\tcase graphTypes.VERTICAL_BAR_CHART \t: return 'D3 Vertical Bar Chart';\n\t\tcase graphTypes.HORIZONTAL_BAR_CHART: return '';\n\t\tcase graphTypes.HISTOGRAM \t\t\t: return '';\n\t\tcase graphTypes.PIE_CHART \t\t\t: return '';\n\t\tcase graphTypes.SCATTER_PLOT \t\t: return '';\n\t\tcase graphTypes.LINE_CHART \t\t\t: return '';\n\t\tdefault : return 'D3 CODE BUILDER';\n\t};\n};\n\nconst prepareDownloadData = (filename,jsData) => {\n\tconst pageTitle = getPageTitle(filename);\n\tconst htmlData = htmlCode1+pageTitle+htmlCode2+jsData+htmlCode3;\n\treturn htmlData;\n};\n\nconst downloadCode = (filename,jsData) => {\n\n\tlet filedata = prepareDownloadData(filename,jsData);\n\n\tlet element = document.createElement('a');\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(filedata));\n\telement.setAttribute('download', filename+'.html');\n\n\telement.style.display = 'none';\n\tdocument.body.appendChild(element);\n\n\telement.click();\n\n\tdocument.body.removeChild(element);\n};\n\nconst DownloadCodeButton = props => {\n\treturn (\n\t\t<div className={classes.DownloadCodeButton}>\n\t\t\t<Button click={() => downloadCode(props.selectedGraph,props.javaScriptCode)}>\n\t\t\t\tDownload As HTML\n\t\t\t</Button>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tselectedGraph\t: state.builder.selectedGraph,\n\t\tjavaScriptCode: state.code.javaScriptCode\n\t};\n};\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\t\n\t};\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DownloadCodeButton);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport Select from '../../../hoc/Select/Select';\nimport DownloadCodeButton from '../DownloadCodeButton/DownloadCodeButton';\nimport * as actions from '../../../store/actions';\n\nimport classes from './Controls.module.css';\n\nconst controls = props => {\n\n\tconst options = props.graphTypes.map(graphType => <option value={graphType.type} key={graphType.type}>{graphType.label}</option>);\n\t//\n\tconst optionChanged = (newOption) => {\n\t\t//console.log(\"changed to \"+value);\n\t\tprops.onOptionChange(newOption);\n\t};\n\t\n\treturn <div className={classes.Controls}>\n\t\t\t\t<Select options={options} changeHandler={optionChanged}/>\n\t\t\t\t<DownloadCodeButton />\n\t\t\t</div>;\n};\n//\nconst mapStateToProps = state => {\n\treturn {\n\t\tgraphTypes \t\t: state.builder.graphTypes,\n\t\tselectedGraph\t: state.builder.selectedGraph\n\t};\n};\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonOptionChange : (selectedGraph) => dispatch(actions.drawGraph(selectedGraph))\n\t};\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(controls);","import React from 'react';\n\nimport Graph from './Graph/Graph';\nimport Controls from './Controls/Controls';\n\nimport classes from './Builder.module.css';\n\nconst builder = props => (\n\t<div className={classes.Builder}>\n\t\t<Graph/> \n\t\t<Controls />\n\t</div>\n);\n\nexport default builder;","import React from 'react';\n\nimport Layout from './hoc/Layout/Layout';\nimport Code from './components/Code/Code';\nimport Builder from './components/Builder/Builder';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n       <Layout>\n          <Builder/>\n          <Code/>\n       </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\nimport * as graphTypes from '../../components/Builder/Graph/graphTypes';\n\nconst graphs = [\n\t\t\t\t{type: graphTypes.VERTICAL_BAR_CHART,label:'Vertical Bar Char'},\n\t\t\t\t{type: graphTypes.HORIZONTAL_BAR_CHART,label:'Horizontal Bar Chart'},\n\t\t\t\t{type: graphTypes.HISTOGRAM,label:'Histogram'},\n\t\t\t\t{type: graphTypes.PIE_CHART,label:'Pie Chart'},\n\t\t\t\t{type: graphTypes.SCATTER_PLOT,label:'Scatter Plot'},\n\t\t\t\t{type: graphTypes.LINE_CHART,label:'Line Chart'}\n\t\t\t\t];\n\nconst initialState = {\n\tgraphTypes\t\t: graphs,\n\tselectedGraph\t: graphTypes.VERTICAL_BAR_CHART,\n\tyData\t\t\t: [57,24,98,67,13],\n\txData\t\t\t: ['kiwi','apple','banana','grapes','oranges'],\n\thistogramData\t: [1,1,12,34,56,12,13,45,36,12,1,11,98,34,34,23,27,29,80],\n\tsxData\t\t\t: [23,45,12,48,29,63],\n\tsyData\t\t\t: [46,93,29,28,62,38]\n};\n\nconst drawGraph = (state, action) => {\n\treturn {\n\t\t...state,\n\t\tselectedGraph: action.graphType\n\t};\n};\n\nconst xDataChange = (state, action) => {\n\treturn {\n\t\t...state,\n\t\txData: action.xData\n\t};\n};\n\nconst yDataChange = (state, action) => {\n\treturn {\n\t\t...state,\n\t\tyData: action.yData\n\t};\n};\n\nconst hDataChange = (state, action) => {\n\treturn {\n\t\t...state,\n\t\thistogramData: action.hData\n\t};\n};\n\nconst sxDataChange = (state, action) => {\n\treturn {\n\t\t...state,\n\t\tsxData: action.sxData\n\t};\n};\n\nconst syDataChange = (state, action) => {\n\treturn {\n\t\t...state,\n\t\tsyData: action.syData\n\t};\n};\n\nconst reducer = (state=initialState, action) => {\n\tswitch(action.type){\n\t\tcase(actionTypes.DRAW_GRAPH): return drawGraph(state, action);\n\t\tcase(actionTypes.X_DATA_CHANGE): return xDataChange(state, action);\n\t\tcase(actionTypes.Y_DATA_CHANGE): return yDataChange(state, action);\n\t\tcase(actionTypes.H_DATA_CHANGE): return hDataChange(state, action);\n\t\tcase(actionTypes.SX_DATA_CHANGE): return sxDataChange(state, action);\n\t\tcase(actionTypes.SY_DATA_CHANGE): return syDataChange(state, action);\n\t\tdefault\t\t\t\t\t\t: return state;\n\t}\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst javaScriptCode = ``;\n\nconst initialState = {\n\tjavaScriptCode : javaScriptCode\n};\n\nconst generateCode = (state, action) => {\n\treturn {\n\t\t...state,\n\t\tjavaScriptCode: action.codeData\n\t};\n};\n\nconst reducer = (state=initialState, action) => {\n\tswitch(action.type){\n\t\tcase(actionTypes.GENERATE_CODE) : return generateCode(state,action);\n\t\tdefault: return state\n\t}\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport builderReducer from './store/reducers/builder';\nimport codeReducer from './store/reducers/code';\nimport { Provider } from 'react-redux';\nimport { createStore ,combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n\tbuilder: builderReducer,\n\tcode: codeReducer\n});\n\nconst store = createStore(rootReducer);\n\nconst app = (\n\t<Provider store={store}>\n\t\t<App/>\n\t</Provider>\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Component\":\"Select_Component__3oG_p\",\"Select\":\"Select_Select__3NWXH\",\"Label\":\"Select_Label__7PEwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__2glRE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputDiv\":\"Input_InputDiv__27o0l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CodeSnippet\":\"CodeSnippet_CodeSnippet__1gRHV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Code\":\"Code_Code__HQm8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Plot\":\"Plot_Plot__4E4i_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Codes\":\"Codes_Codes__2Xme2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Graph\":\"Graph_Graph__SjAyf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__24qgz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DownloadCodeButton\":\"DownloadCodeButton_DownloadCodeButton__36a73\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"Controls_Controls__3aCmp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Builder\":\"Builder_Builder__2pkr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputData\":\"InputData_InputData__264mP\",\"error\":\"InputData_error__2iGIw\",\"UploadBtnDiv\":\"InputData_UploadBtnDiv__p8n0-\",\"TextboxDiv\":\"InputData_TextboxDiv__1OWnJ\"};"],"sourceRoot":""}